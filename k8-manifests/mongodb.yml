#Define Persistent Volumes object named `mongo-pv`
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongo-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/k8s/mongo"

---
#  Define a Persistent Volume Claim named `mongo-pvc` that can be used by a Pod to gain access to the Persistent Volumes
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

#Define a deployment named `mongodb` by using the latest mongo image from Docker Hub
#Use container port 27017.
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mongo
      name: mongo-service
    spec:
      containers:
        - image: mongo
          name: mongo
          ports:
            - containerPort: 27017
              name: mongo
          volumeMounts:
            - name: mongo-pvc
              mountPath: /data/db
      volumes:
        - name: mongo-pvc
          persistentVolumeClaim:
            claimName: mongo-pvc
---
#Define a service named `mongodb` of type ClusterIP and use the above created deployment as selector
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo-service
spec:
  clusterIP: None
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongo
